{"version":3,"file":"static/webpack/static/development/pages/index.js.7717520bd4f088d25bbb.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React from 'react';\nimport { Mutation }from 'react-apollo';\nimport { ALL_ITEMS_QUERY } from './Items';\nimport ErrorMessage from './ErrorMessage';\n\nconst DELETE_ITEM_MUTATION = gql`\n\tmutation DELETE_ITEM_MUTATION(id: ID!){\n\t\tdeleteItem(id: $id){\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst DeleteItem = props => {\n\tconst { id, children } = props;\n\n\tconst update = (cache, payload) => {\t//cache & payload accessible via Apollo\n\t\tconst data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\t\t// console.log(data, payload);\n\t\tdata.items = data.items.filter(item =>(\n\t\t\titem.id !== payload.data.deleteItem.id\n\t\t));\n\t\tcache.writeQuery({ query: ALL_ITEMS_QUERY, data })\n\t}\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<Mutation \n\t\t\t\tmutation={DELETE_ITEM_MUTATION} \n\t\t\t\tvariables={{ id }}\n\t\t\t\tupdate={() => update()}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\t(deleteItem, {error}) => (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tclassName=\"btn btn-lg text-secondary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tconfirm('Are you sure you want to delete this item?') && deleteItem();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{children}\t\t\t\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t<ErrorMessage error={error} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Mutation>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default DeleteItem;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAkBA;AACA;AACA;;;;A","sourceRoot":""}